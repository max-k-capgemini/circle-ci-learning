# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-frontend-simulation:
    docker:
      - image: cimg/node:21.6.2-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - run: echo Build frontend simulation

      - run: mkdir build_output
      - run: touch build_output/compiled_output.txt

      - persist_to_workspace:
          root: build_output
          paths:
              - '*'

      - run: echo Value of 'TEST_ENV_VARIABLE' variable is $TEST_ENV_VARIABLE
      
      - run: echo Value of 'CONTEXT_VAR_1' variable is $CONTEXT_VAR_1

      - run:
          extracted_context_var=$CONTEXT_VAR_1
          echo $extracted_context_var

      - run: echo All steps of 'build-frontend-simulation' job passed!

  build-backend-simulation:
    docker:
      - image: cimg/node:21.6.2-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - run: echo Build backend simulation

      - run: echo All steps of 'build-backend-simulation' job passed!

  test-frontend-simulation:
    docker:
      - image: cimg/node:21.6.2-browsers
    
    working_directory: ~/repo

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo/workspace
      - run: ls ~/repo/workspace/compiled_output.txt

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

      - run: echo All steps of 'test-frontend-simulation' job passed!

  test-backend-simulation:
    docker:
      - image: cimg/node:21.6.2-browsers
    
    working_directory: ~/repo

    steps:
      - run: echo Test backend simulation

      - run: echo All steps of 'test-backend-simulation' job passed!

  test-integration-simulation:
    docker:
      - image: cimg/node:21.6.2-browsers
    
    working_directory: ~/repo

    steps:
      - run: echo Test integration simulation

      - run: echo All steps of 'test-integration-simulation' job passed!
  
  deploy:
    docker:
      - image: cimg/node:21.6.2-browsers
    
    working_directory: ~/repo

    steps:
      - run: echo All steps of 'deploy' job passed!

      - attach_workspace:
          at: ~/repo/workspace
      - run: ls ~/repo/workspace/compiled_output.txt

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-frontend-simulation:
          context:
            - Test context 1
      
      - build-backend-simulation
      - test-frontend-simulation:
          requires:
           - build-frontend-simulation
      - test-backend-simulation:
          requires:
            - build-backend-simulation
      - test-integration-simulation:
         requires:
          - build-frontend-simulation
          - build-backend-simulation
      - deploy:
          requires:
            - test-frontend-simulation
            - test-backend-simulation
            - test-integration-simulation
          filters:
            # Filtering by branch name string or regex:
            branches:
              only:
                - main
              # Ignoring job for specific branch:
              # ignore:
                # - ignored_branch_name
            # Filtering by tag string or regex (used OR logic with filtering by branch):
            tags:
              only:
                - /tag_prefix.*/
